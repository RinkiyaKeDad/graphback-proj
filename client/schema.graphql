## NOTE: This schema was generated by Graphback and should not be changed manually

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

input CreateTodoInput {
  _id: GraphbackObjectID
  title: String!
}

scalar GraphbackObjectID

input GraphbackObjectIDInput {
  ne: GraphbackObjectID
  eq: GraphbackObjectID
  le: GraphbackObjectID
  lt: GraphbackObjectID
  ge: GraphbackObjectID
  gt: GraphbackObjectID
  in: [GraphbackObjectID!]
  between: [GraphbackObjectID!]
}

input MutateTodoInput {
  _id: GraphbackObjectID!
  title: String
}

type Mutation {
  createTodo(input: CreateTodoInput!): Todo
  updateTodo(input: MutateTodoInput!): Todo
  deleteTodo(input: MutateTodoInput!): Todo
}

input OrderByInput {
  field: String!
  order: SortDirectionEnum = ASC
}

input PageRequest {
  limit: Int
  offset: Int
}

type Query {
  getTodo(id: GraphbackObjectID!): Todo
  findTodos(filter: TodoFilter, page: PageRequest, orderBy: OrderByInput): TodoResultList!
}

enum SortDirectionEnum {
  DESC
  ASC
}

input StringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  in: [String!]
  contains: String
  startsWith: String
  endsWith: String
}

type Subscription {
  newTodo(filter: TodoSubscriptionFilter): Todo!
  updatedTodo(filter: TodoSubscriptionFilter): Todo!
  deletedTodo(filter: TodoSubscriptionFilter): Todo!
}

"""@model"""
type Todo {
  _id: GraphbackObjectID!
  title: String!
}

input TodoFilter {
  _id: GraphbackObjectIDInput
  title: StringInput
  and: [TodoFilter!]
  or: [TodoFilter!]
  not: TodoFilter
}

type TodoResultList {
  items: [Todo]!
  offset: Int
  limit: Int
  count: Int
}

input TodoSubscriptionFilter {
  and: [TodoSubscriptionFilter!]
  or: [TodoSubscriptionFilter!]
  not: TodoSubscriptionFilter
  _id: GraphbackObjectIDInput
  title: StringInput
}